generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String  @db.ObjectId @map("user_id")
  type              String
  provider          String
  providerAccountId String  @map("provider_account_id")
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Session {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  userId       String   @db.ObjectId
  expires      DateTime
  sessionToken String   @unique
  accessToken  String   @unique
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  user User @relation(fields: [userId], references: [id])

  @@map("sessions")
}

model User {
  id             String @id @default(auto()) @map("_id") @db.ObjectId
  name           String?
  email          String? @unique
  hashedPassword String?
  emailVerified  String?
  university     String?
  degree         String?
  branch         String?
  image          String?
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  accounts       Account[]
  sessions       Session[]

  @@map("users")
}

model NonVerifiedUser {
  id             String @id @default(auto()) @map("_id") @db.ObjectId
  name           String
  email          String @unique
  hashedPassword String
  otp            Int
  otpExpiry      DateTime
}

model VerificationToken {
  id          String @id @default(auto()) @map("_id") @db.ObjectId
  identifier  String
  token       String
  expires     DateTime

  @@unique([identifier, token])
  @@map("verification_tokens")
}

model PdfDetails {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId // Ensure ObjectId type for MongoDB
  pdf          String
  title        String
  type         String
  result       String  @default("result")
  dateUploaded DateTime @default(now()) // Use DateTime for date storage
}
